import vueDevToolsOptions from "/@id/virtual:vue-devtools-options"
import { initAppSeparateWindow, setDevToolsClientUrl } from "/node_modules/@vue/devtools-core/dist/index.js?v=67ea263c"
import { addCustomTab, devtools, setDevToolsEnv, setOpenInEditorBaseUrl, toggleComponentInspectorEnabled } from "/node_modules/@vue/devtools-kit/dist/index.js?v=67ea263c"

function normalizeUrl(url) {
  return new URL(`${vueDevToolsOptions.base || '/'}${url}`, import.meta.url).toString()
}

const overlayDir = normalizeUrl(`@id/virtual:vue-devtools-path:overlay`)
const body = document.getElementsByTagName('body')[0]
const head = document.getElementsByTagName('head')[0]

setDevToolsEnv({
  vitePluginDetected: true,
})

const devtoolsClientUrl = normalizeUrl(`__devtools__/`)
setDevToolsClientUrl(devtoolsClientUrl)
setOpenInEditorBaseUrl(normalizeUrl('').slice(0, -1))

toggleComponentInspectorEnabled(!!vueDevToolsOptions.componentInspector)

devtools.init()

// create vite inspect tab
addCustomTab({
  title: 'Vite Inspect',
  name: 'vite-inspect',
  icon: 'i-carbon-ibm-watson-discovery',
  view: {
    type: 'iframe',
    src: normalizeUrl(`__inspect/`),
  },
  category: 'advanced',
})

// create link stylesheet
const link = document.createElement('link')
link.rel = 'stylesheet'
link.href = `${overlayDir}/devtools-overlay.css`

// create script
const script = document.createElement('script')
script.src = `${overlayDir}/devtools-overlay.js`
script.type = 'module'

// append to head
head.appendChild(link)

// append to body
body.appendChild(script)

// Used in the browser extension
window.__VUE_DEVTOOLS_VITE_PLUGIN_CLIENT_URL__ = `${window.location.origin}${devtoolsClientUrl}`

initAppSeparateWindow()

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpcnR1YWw6dnVlLWRldnRvb2xzLXBhdGg6b3ZlcmxheS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdnVlRGV2VG9vbHNPcHRpb25zIGZyb20gXCIvQGlkL3ZpcnR1YWw6dnVlLWRldnRvb2xzLW9wdGlvbnNcIlxuaW1wb3J0IHsgaW5pdEFwcFNlcGFyYXRlV2luZG93LCBzZXREZXZUb29sc0NsaWVudFVybCB9IGZyb20gXCIvbm9kZV9tb2R1bGVzL0B2dWUvZGV2dG9vbHMtY29yZS9kaXN0L2luZGV4LmpzP3Y9NjdlYTI2M2NcIlxuaW1wb3J0IHsgYWRkQ3VzdG9tVGFiLCBkZXZ0b29scywgc2V0RGV2VG9vbHNFbnYsIHNldE9wZW5JbkVkaXRvckJhc2VVcmwsIHRvZ2dsZUNvbXBvbmVudEluc3BlY3RvckVuYWJsZWQgfSBmcm9tIFwiL25vZGVfbW9kdWxlcy9AdnVlL2RldnRvb2xzLWtpdC9kaXN0L2luZGV4LmpzP3Y9NjdlYTI2M2NcIlxuXG5mdW5jdGlvbiBub3JtYWxpemVVcmwodXJsKSB7XG4gIHJldHVybiBuZXcgVVJMKGAke3Z1ZURldlRvb2xzT3B0aW9ucy5iYXNlIHx8ICcvJ30ke3VybH1gLCBpbXBvcnQubWV0YS51cmwpLnRvU3RyaW5nKClcbn1cblxuY29uc3Qgb3ZlcmxheURpciA9IG5vcm1hbGl6ZVVybChgQGlkL3ZpcnR1YWw6dnVlLWRldnRvb2xzLXBhdGg6b3ZlcmxheWApXG5jb25zdCBib2R5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXVxuY29uc3QgaGVhZCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF1cblxuc2V0RGV2VG9vbHNFbnYoe1xuICB2aXRlUGx1Z2luRGV0ZWN0ZWQ6IHRydWUsXG59KVxuXG5jb25zdCBkZXZ0b29sc0NsaWVudFVybCA9IG5vcm1hbGl6ZVVybChgX19kZXZ0b29sc19fL2ApXG5zZXREZXZUb29sc0NsaWVudFVybChkZXZ0b29sc0NsaWVudFVybClcbnNldE9wZW5JbkVkaXRvckJhc2VVcmwobm9ybWFsaXplVXJsKCcnKS5zbGljZSgwLCAtMSkpXG5cbnRvZ2dsZUNvbXBvbmVudEluc3BlY3RvckVuYWJsZWQoISF2dWVEZXZUb29sc09wdGlvbnMuY29tcG9uZW50SW5zcGVjdG9yKVxuXG5kZXZ0b29scy5pbml0KClcblxuLy8gY3JlYXRlIHZpdGUgaW5zcGVjdCB0YWJcbmFkZEN1c3RvbVRhYih7XG4gIHRpdGxlOiAnVml0ZSBJbnNwZWN0JyxcbiAgbmFtZTogJ3ZpdGUtaW5zcGVjdCcsXG4gIGljb246ICdpLWNhcmJvbi1pYm0td2F0c29uLWRpc2NvdmVyeScsXG4gIHZpZXc6IHtcbiAgICB0eXBlOiAnaWZyYW1lJyxcbiAgICBzcmM6IG5vcm1hbGl6ZVVybChgX19pbnNwZWN0L2ApLFxuICB9LFxuICBjYXRlZ29yeTogJ2FkdmFuY2VkJyxcbn0pXG5cbi8vIGNyZWF0ZSBsaW5rIHN0eWxlc2hlZXRcbmNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaW5rJylcbmxpbmsucmVsID0gJ3N0eWxlc2hlZXQnXG5saW5rLmhyZWYgPSBgJHtvdmVybGF5RGlyfS9kZXZ0b29scy1vdmVybGF5LmNzc2BcblxuLy8gY3JlYXRlIHNjcmlwdFxuY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0JylcbnNjcmlwdC5zcmMgPSBgJHtvdmVybGF5RGlyfS9kZXZ0b29scy1vdmVybGF5LmpzYFxuc2NyaXB0LnR5cGUgPSAnbW9kdWxlJ1xuXG4vLyBhcHBlbmQgdG8gaGVhZFxuaGVhZC5hcHBlbmRDaGlsZChsaW5rKVxuXG4vLyBhcHBlbmQgdG8gYm9keVxuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpXG5cbi8vIFVzZWQgaW4gdGhlIGJyb3dzZXIgZXh0ZW5zaW9uXG53aW5kb3cuX19WVUVfREVWVE9PTFNfVklURV9QTFVHSU5fQ0xJRU5UX1VSTF9fID0gYCR7d2luZG93LmxvY2F0aW9uLm9yaWdpbn0ke2RldnRvb2xzQ2xpZW50VXJsfWBcblxuaW5pdEFwcFNlcGFyYXRlV2luZG93KClcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUM7QUFDbEUsTUFBTSxDQUFDLENBQUMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7QUFDdkgsTUFBTSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLCtCQUErQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUM7QUFDMUs7QUFDQSxRQUFRLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDNUIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUN2RixDQUFDO0FBQ0Q7QUFDQSxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMs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